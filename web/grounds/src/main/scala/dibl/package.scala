/*
Copyright 2015 Jo Pol
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program. If not, see http://www.gnu.org/licenses/.package dibl
  */

import scala.collection.immutable.HashMap
import language.postfixOps

package object dibl {

  /** Collections of matrices with tuples defining a two-in two-out directed graph.
    *
    * Each collection matches one or two SVG documents: templates for thread and/or pair diagrams.
    * A tuple in a matrix defines a node in the diagram, or in other words:
    * the orientation of the four 'legs' of a stitch, e.g. like: |<, >|, ><, _V_
    *
    * So far a subset is used of the diagrams generated by Veronika Irvine:
    * <a href="http://web.uvic.ca/~vmi/papers/bridges2012.html">Broadening the Palette for Bobbin Lace: A Combinatorial Approach.</a>
    * Bridges 2012: Mathematics, Music, Art, Architecture, Culture, pages 191-198. Tessellations Publishing, 2012.
    * */
  val matrixMap = {
    val R = Array // row
    val M = Array // matrix
    HashMap(
      "diagonal-3x3" -> Array(
        M(R("0,1,1,0,-1,-1", "1,0,1,0,-1,-1", "0,0,1,1,-1,-1"), R("0,1,1,-1,-1,0", "-1,1,0,1,0,-1", "0,1,1,0,-1,-1"), R("-1,1,1,0,-1,0", "0,0,0,0,0,0", "1,1,0,-1,0,-1")),
        M(R("1,0,1,0,-1,-1", "1,0,1,0,-1,-1", "0,0,1,1,-1,-1"), R("0,1,1,-1,-1,0", "-1,1,0,1,0,-1", "0,1,1,-1,0,-1"), R("-1,1,1,0,0,-1", "1,0,1,-1,0,-1", "1,0,1,-1,0,-1")),
        M(R("1,0,1,0,-1,-1", "0,0,1,1,-1,-1", "1,0,1,0,-1,-1"), R("-1,1,0,1,-1,0", "0,1,0,1,-1,-1", "0,1,1,-1,-1,0"), R("-1,1,1,-1,0,0", "1,1,0,-1,0,-1", "-1,1,1,0,0,-1")),
        M(R("1,0,1,0,-1,-1", "1,0,1,-1,0,-1", "0,0,1,1,-1,-1"), R("1,1,0,0,-1,-1", "-1,0,1,1,0,-1", "0,1,1,-1,-1,0"), R("-1,1,1,0,0,-1", "1,0,1,-1,0,-1", "0,1,1,-1,0,-1")),
        M(R("0,0,1,1,-1,-1", "-1,1,1,-1,0,0", "1,1,0,0,-1,-1"), R("1,1,0,0,-1,-1", "0,0,1,1,-1,-1", "-1,1,1,-1,0,0"), R("-1,1,1,-1,0,0", "1,1,0,0,-1,-1", "0,0,1,1,-1,-1")),
        M(R("1,0,1,0,-1,-1", "-1,0,1,1,-1,0", "1,1,0,0,-1,-1"), R("-1,1,1,0,-1,0", "0,1,0,1,-1,-1", "0,1,1,-1,0,-1"), R("-1,1,1,-1,0,0", "1,1,0,-1,0,-1", "0,0,1,1,-1,-1")),
        M(R("1,0,1,0,-1,-1", "-1,1,1,0,0,-1", "1,0,1,0,-1,-1"), R("0,1,0,1,-1,-1", "0,0,1,1,-1,-1", "0,1,1,-1,-1,0"), R("-1,1,1,-1,0,0", "1,1,0,-1,-1,0", "-1,1,0,1,0,-1")))
      , "brick-3x3" -> Array(
        M(R("-1,1,0,1,-1,0,0,0", "0,0,0,1,1,-1,0,-1", "1,1,0,0,0,-1,0,-1"), R("1,1,0,0,0,-1,0,-1", "-1,1,0,1,-1,0,0,0", "0,0,0,1,1,-1,0,-1"), R("-1,1,0,1,-1,0,0,0", "0,0,0,1,1,-1,0,-1", "1,1,0,0,0,-1,0,-1")),
        M(R("-1,1,0,1,-1,0,0,0", "0,1,0,0,1,-1,0,-1", "1,1,0,0,0,-1,0,-1"), R("1,1,0,0,-1,0,0,-1", "0,1,0,1,-1,0,0,-1", "1,0,0,1,0,-1,0,-1"), R("-1,0,0,1,1,-1,0,0", "0,0,0,1,1,-1,0,-1", "-1,1,0,1,0,-1,0,0")),
        M(R("-1,1,0,1,-1,0,0,0", "0,1,0,0,1,-1,0,-1", "1,1,0,0,0,-1,0,-1"), R("0,1,0,0,1,-1,0,-1", "-1,1,0,1,0,0,0,-1", "-1,0,0,1,1,0,0,-1"), R("0,1,0,1,-1,-1,0,0", "1,0,0,1,0,-1,0,-1", "1,0,0,1,-1,-1,0,0")),
        M(R("-1,1,0,1,0,-1,0,0", "-1,1,0,0,1,-1,0,0", "0,1,0,0,1,-1,0,-1"), R("-1,1,0,0,1,-1,0,0", "0,1,0,0,1,-1,0,-1", "-1,1,0,1,0,0,0,-1"), R("0,1,0,1,-1,-1,0,0", "1,1,0,0,0,-1,0,-1", "1,0,0,1,-1,-1,0,0")),
        M(R("-1,1,0,1,-1,0,0,0", "0,1,0,0,1,-1,0,-1", "1,0,0,1,0,-1,0,-1"), R("1,1,0,0,-1,0,0,-1", "0,1,0,1,-1,-1,0,0", "1,0,0,1,0,-1,0,-1"), R("0,0,0,1,1,-1,0,-1", "-1,1,0,1,0,0,0,-1", "-1,1,0,0,1,-1,0,0")),
        M(R("-1,1,0,1,0,-1,0,0", "-1,1,0,0,1,-1,0,0", "0,0,0,1,1,-1,0,-1"), R("1,1,0,0,0,-1,0,-1", "1,1,0,0,-1,-1,0,0", "0,1,0,1,-1,-1,0,0"), R("0,1,0,0,1,-1,0,-1", "-1,1,0,1,0,0,0,-1", "-1,1,0,0,1,-1,0,0")),
        M(R("-1,1,0,1,0,-1,0,0", "-1,1,0,0,1,0,0,-1", "0,0,0,1,1,-1,0,-1"), R("0,0,0,0,0,0,0,0", "0,1,0,1,0,-1,0,-1", "0,1,0,1,0,-1,0,-1"), R("1,0,0,1,0,-1,0,-1", "1,1,0,0,-1,0,0,-1", "0,1,0,1,-1,-1,0,0")),
        M(R("0,1,0,1,0,-1,0,-1", "0,1,0,1,0,-1,0,-1", "0,1,0,1,0,-1,0,-1"), R("0,1,0,1,0,-1,0,-1", "0,1,0,1,0,-1,0,-1", "0,1,0,1,0,-1,0,-1"), R("0,1,0,1,0,-1,0,-1", "0,1,0,1,0,-1,0,-1", "0,1,0,1,0,-1,0,-1")))
      ,"interleaved_2x2" -> Array(
        M(R("-1,1,1,0,-1,0,0,0","1,0,0,0,1,-1,-1,0"), R("-1,1,0,0,1,-1,0,0","-1,0,1,0,1,0,-1,0")),
        M(R("-1,1,0,1,-1,0,0,0","1,0,0,0,1,-1,0,-1"), R("0,1,0,1,0,-1,0,-1","0,0,0,0,0,0,0,0")),
        M(R("-1,1,0,0,1,-1,0,0","-1,1,0,0,1,-1,0,0"), R("-1,1,0,0,1,-1,0,0","-1,1,0,0,1,-1,0,0")),
        M(R("-1,1,0,0,1,0,-1,0","-1,0,1,0,1,-1,0,0"), R("0,1,1,0,0,-1,-1,0","0,0,0,0,0,0,0,0")),
        M(R("-1,0,1,0,1,0,-1,0","-1,0,1,0,1,0,-1,0"), R("1,0,1,0,-1,0,-1,0","1,0,1,0,-1,0,-1,0")),
        M(R("-1,1,0,0,1,0,0,-1","-1,1,0,0,1,0,0,-1"), R("1,0,0,1,-1,-1,0,0","1,0,0,1,-1,-1,0,0")),
        M(R("0,1,1,0,0,0,-1,-1","0,1,1,0,0,0,-1,-1"), R("0,0,1,1,0,-1,-1,0","0,0,1,1,0,-1,-1,0")))
    )
  }
}
